Настройка проекта:
  Работа с project.todo:
    ☐ F1 > 'fold' > Editor: Fold All. You're welcome :)
      ☐ Alt + = (6 на базовой раскладке) - галка пункт выполнен
      ☐ Alt + * (7 на базовой расскладке) - новый пункт
  Если не открывала Q&A.todo:
    ☐ Открыть макеты проекта в @Photoshop и @Zeplin.
    Выбор шаблона:
      Шаблоны более не нужны, workflow сильно поменялся. Но на всякий случай, найти их можно на Яндекс Диске > Freelancer > Templates.
    Выбор шортката для терминала:
      Шорткаты отличаются друг от друга типом сетки и наличием поддержки SVG. Есть 4 варианта.
      ☐ custom @Название_проекта
      ☐ boot @Название_проекта
      ☐ customSvg @Название_проекта
      ☐ bootSvg @Название_проекта
      Выбрать помогут ответы на следующие вопросы.
      Сделал ли дизайнер единообразные сетки?:
        ☐ Если нет, придется подбирать самой
          ☐ @Решение: Вкладка View > Clear Guides/Clear Canvas Guides пока не останется ни одной сетки. Далее New Guide Layout. Для начала лучше искать варианты с 12 колонками и различными вариациями @gutter. Не забудь в vars.scss записать размер gutter и кол-во колонок, если оно будет отличаться от 12 колонок и 30px отступах.
          Итог:
          ☐ Удалось ли подобрать одинаковые расстояния между колонками, отступы по краям макета?
            ☐ @Да, значит нужна команда @boot.
            ☐ @Нет закономерностей в отступах. Придеться создавать индивидуальную сетку под разные версии - команда в терминала будет начинаться с @custom.
      Есть ли в макетах SVG?:
        ☐ При двойном клике на, не контентное, изображение оно должно открываться в Ai.
          ☐ Если нет и изображение открывается в Photoshop в формате psb - то это невозможно превратить в SVG. Считай, что SVG нет в макете
          ☐ Если да, значит к базовым командам нужно добавить Svg. customSvg или bootSvg.
    После выбора шортката:
      В терминале ввести:
        ☐ @Шорткат @Название_проекта
        ☐ Пример: bootSvg toolmaster
        ☐ Автоматически откроется Atom и Chrome
  Подготовка макета:
    При плохой работе дизайнера исправлять ошибки придется тебе. Zeplin может выдавать за SVG (SVG забирать только из Ai), другие форматы, а также все изображения дублируются в png и jpg. Так что нужно будет удалить png для непрозрачных контентных изображений и jpg для иконок и прочих дизайнерских элементов.
      ☐ @Переименовывай изображения в Zeplin перед тем как их скачать, так проще и быстрее!
      ☐ Если есть вопросы по форматам изображений или как использовать crop, merge в случаях особенно плохой работы дизайнера см. 158 строчку @Photoshop.
    Подготовка макета под pixel perfect:
      ☐ Теперь для этих целей использую 'Pop Screen Out' из @Zeplin. Подгоняется также стрелками и масштабом.
    Создание artboards из слоев для Zeplin:
      Сетка созданная дизайнером соответствует рабочей?
      Нет:
        ☐ View > Clear Canvas Guides.
          ☐ Там же New Guide Layout
        ☐ Подстроить gutter или даже колонки под макет
          ☐ Если макет имеет большое фоновое изображение @change выходящее за края, сетку можно подстроить за счет больших margin left и right. Это нужно для более удобной работы с artboard, если слои неправильно обрежутся.
      Да:
        ☐ Убрать замки со слоев, если такие есть
        ☐ Выделить все слои. Правая кнопка мыши, 'Artboard from layers...'
        Вылезли ли какие-то слои за пределы @change сетки макета?:
          Да:
            Можно вернуться на шаг назад и по другому построить сетку:
              ☐ Добавить линии верха и низа, за счет margin top и bottom 0px. Это позволить быстрее заметить если слои поедут не только в стороны, но и сдвинутся вверх или вниз.
              ☐ Также не помешает узнать ширину и высоту макета
              ☐ Теперь хорошо заметно куда нужно подтянуть макет. Можно убрать у сетки margin, больше они не нужны.
          Нет:
            ☐ Приступить к следующему шагу
        Переименовать artboard по системе:
          ☐ Переименовывать в layers
          ☐ Размер ширины макета
          ☐ Какая это страница - index, card, form etc
          ☐ Найди все изображения на этом artboard и пометь их кнопкой 'Mark as asset'
          ☐ Экспортировать artboard.
          ☐ @Не закрывай вкладку с макетом в Photoshop!
            ☐ Если на странице есть @скрытые_слои - открывающееся меню, всплывающие окно и т.д. Данный artboard нужно экспортировать в обоих видах в Zeplin. menu-unfolded, pop-up etc. @change Т.е. например сначала экспортировать 320-index.
            ☐ Затем переименовать artboard в 320-index-menu-unfolded
            ☐ В layers выбрать поиск по Name. Ввести e- remove asset дабы не дублировать
            ☐ Включить скрытый слой, если есть выбрать на нем новые изображения, и экспортировать
        Zeplin:
          Зайди на вкладку 'assets'
          ☐ Найди элементы в макете и переименуй
          Формат оформленния названий должен быть единообразным:
            html-bg/i/ct/logo/-d/-md/-xl@2x
            ☐ html - index, photo, form. @Опускается, если данная графика будет на всех страницах
            ☐ bg - background, i - icon, ct - content, logo, etc.
            ☐ Версии. d - default; md - medium; xl - extra large; @Опускаются, если у макета только одна версия.
            Примеры:
              ☐ index-ct-1-d.jpg - контентное изображение для малых экранов, существующие только на главной странице
              ☐ map-xl@2x.jpg - ретиновое изображение, для больших экранов, существующие на всех/многих страницах проекта
              ☐ products-ct-2.jpg - контентное изображение со страницы "Продукция", единое для всех версий
              ☐ logo.png - фоновое изображение существующие на всех версиях
          ☐ Скачай изображения в папку с проектом. Быстрее через 'Download all assets' PNG, JPG.
          ☐ Открой папку со скаченной графикой
            ☐ Удали @3x.jpg версии
            ☐ Посмотри как скачались фоновый изображения. Нет ли у них слоев текста или возможно размер не соответствует макетному
              ☐ Да, было даже такое в макете Nikolsky.
              ☐ @change Дизайнер не изолировал слои, поэтому на изображение остался текст. Пришлось задействовать Photoshop.
            ☐ Если все в порядке, значит закрывай вкладку в Photoshop, не сохраняя изменений.
            ☐ Приступай к следующей версии или другим страницам проекта
    Styleguide. Шрифты и цвета:
      ☐ Zeplin Projects > Styleguide > Color Palette и Text style catalog. @Удали оттуда цвета и шрифты от прошлого проекта
      Как узнать какие шрифты и цвета используются в макете в Zeplin?:
        ☐ Начинаешь с мобильных версий макета.
        ☐ Решаешь, что здесь текст, а что лого, например.
        ☐ Выделяешь блок текста. Во вкладке Typeface. Не только видишь название шриифта, но и добавляешь его. Появиться значок 'Aa+'
          ☐ Тоже самое делай с цветом.
          ☐ Теперь данный шрифт, с данным font-family, font-weight, font-size, color будет называться 'Text Style'
            ☐ Если следующий блок будет отличаться по font-family, font-weight, font-size или color он будет называться 'Type Style 2'.
        ☐ Обработай все версии макета подобным образом
      Шрифты. Что делать если заказчик предоставил только ttf/otf версию шрифтов?:
        ☐ Для начала проверь нет ли лишних начертаний. Сравни типы шрифтов и Styleguide (сколько font-face столько и типов начертания). Например, могут не понадобиться bold italic, light, ultralight и т.п.
        ☐ otf или ttf - Зайти на https://everythingfonts.com/font-face
        ☐ Зайти в аккаунт. Выбрать Yes в The EULAs of the font allow Web Embedding (without Adobe Flash). Переименовываем файл, если необходимо. Забрасываем туда ttf/otf файл.
        ☐ Если отказывается работать с otf - зайти на https://convertio.co/ru/otf-ttf/ переделай в ttf и попробуй еще раз.
        Как подключить шрифты. Папка fonts и fonts.scss:
          ☐ Для начала их нужно разъархивировать и переименовать по аналогии из шаблона fonts.scss и папки fonts. Множественное переименование - выделяешь все файлы, F2. Все 3 файла будут иметь одинаковое название.
          ☐ В fonts.scss - @include font-face ("Raleway", "../fonts/Raleway-Bold/Raleway-Bold", bold);
          ☐ папка - Raleway-Bold. Внутри 3 файла названных соответственно Raleway-Bold.ttf; Raleway-Bold.woff; Raleway-Bold.woff2;
          ☐ Не забудь удалить эти шрифты. Они ведь только для примера.
          ☐ Запасной вариант подключения (на всякий случай): http://fonts4web.ru/opensans.html
      vars.scss:
        ☐ Скачать @change scss @Color_palette из @Zeplin в PALETTE
        ☐ Скачать @change scss @Styleguide из @Zeplin
          ☐ @change в целях эксперимента по ускорению верстки, файл  fonts.css был обработан следующим образом. Удаленые все версии text-align: left/center/right; По средствам замены на пустую строку. В таком виде содержимое, кроме font-face, было добавлено в mixins.
        Scaffolding в vars:
          ☐ font-family-base - измени на свои шрифты из fonts.scss
          ☐ Точно шрифт sans-serif? Вдруг в этот раз это не так.
            ☐ https://typekit.com/fonts или https://webfonts.pro/ - можно найти здесь и проверить.
          ☐ В проекте есть второй шрифт или этот параметр можно убрать?
          ☐ Не забудь изменить цвет фона всего документа в $body-bg.
    WordPress:
      ☐ Не забудь внести изменения в gulpfile если после верстки будешь сажать проект на WordPress.
  Какие плагины оставляешь в проекте:
    Ненужные необходимо:
      ☐ Закомментировать или удалить в gulpfile, в function js
      ☐ В папке libs удалить соответствующие папки
      ☐ В файле libs удалить строчку импортирующую из папки libs
    ☐ Итак карусель есть?
      ☐ Если да, то какая подходит больше от @fotorama или от @owl? @change (Неплохо бы указать примеры макетов, где были использованы либо fotorama либо owl. С объяснением где и какой лучше использовать)
    ☐ Есть ли всплывающие окна? Для этого magnific-popup
    ☐ Нужна ли стилизация select, может тегов? Стоит ли это делать если будет посадка на WP? За это отвечает selectize
    ☐ Нужен ли в принципе jquery? Если не будешь использовать ни один из плагинов ответ нет.
  Внести изменения в package.json:
    ☐ Навести курсор на "project", Ctrl + D и заменить в трех ниже описанных местах
    ☐ "name": "project" - на название проекта
    ☐ "description:" "project" - на название проекта
    ☐ "url": "https://github.com/Valebas/project.git" - на название проекта
    ☐ На всякий случай, открой папку @libs, если есть плагины, которые тебе не нужны и удали их (Если не читала предыдущий шаг)
  Подключение Git:
    ☐ В терминале останови gulp. Через Ctrl+C.
    ☐ Там же пишем 'git init'
        ☐ Должна появиться приставка master
    ☐ git add .
      ☐ Если появится "LF will be replaced by CRLF" - это нормально. Менять самостоятельно не имеет смысла. Речь о показателе внизу файла, слева от UTF-8.
    ☐ git commit -m 'This commit is a lie'
    GitHub:
      ☐ Нужно создать на сайте GitHub репозиторий с названием проекта. [Вкладка репозиториев - New - Дать название репозиторию (имя проекта) - кнопка "Create repository"]
    В терминале:
      ☐ git remote add origin git@github.com:Valebas/your_project.git
        ☐ Поменяй your_project на название проекта
      ☐ git push -u origin master
      ☐ @change Может понадобиться пароль - см. заметку Хронология изменений в Workflow
      ☐ Всё! git подключен к проекту.
        ☐ Значок папки проекта изменится только после перезапуска атома
  Проект настроен. Блок "Настроек проекта" можно удалить, если хочется:
    ☐ Создать файл todoist.todo на одном уровне с project.todo. Ход верстки описывать только в нем.
--- ✄ --------------------------------------
Памятка верстальщику:
  Photoshop. Нарезка графики из макета. Общие правила:
    ☐ NB! В layers всегда должно быть выбрано @Normal или @pass_through. Это режимы наложения, в браузерах реализован только normal. Но это не значит, что все слои будут в normal. Это нормально. Особенно, если это pass through.
    ☐ Не забывай о подготовке растровой графики для ретинизации (сохранение всех картинок не только в базовом размере, но и в @2x), если таковая нужна заказчику. О том как это отдать в верстке см. Памятку верстальщику.
      ☐ Что имеет смысл ретинизировать, а что нет? В основном контентные изображения, для иконок должны быть svg.
    JPG:
      ☐ Правый клик "Export As..". Можно сохранить сразу в нескольких размерах, для ретинизации.
        ☐ bg, pattern и контентные фото (если прозрачность не важна).
        ☐ Вес. Потом в build проверить не превышает ли фон размер в 100Kb. Желательно, чтобы не превышал. Впрочем качество важнее.
    PNG:
      ☐ Можно через правый клик "Quick export PNG" Если нужна прозрачность в контенте или если это иконка (Только в том случае, если иконка не входит в font-awesome). Фон почти всегда в JPEG так он меньше весит.
      PNG-8:
        ☐ Редко используется. Однако визуально лучше JPEG по качеству. И меньше весит. Минус - плохо обрезает сложные углы и очертания. Из-за чего и используется крайне редко.
      Реши, нужен ли спрайт:
        ☐ Совет: лучше сохрани отдельные файлы в папке sprite. Может быть придется что-то добавить дабы не менять bgposition. Спрайт делается через сторонние ресурсы в духе: https://spritegen.website-performance.org/
        http://spritepad.wearekiss.com/ http://draeton.github.io/stitches/
        ☐ В идеале, иконки должны быть в svg. Следовательно спрайт для ретины не нужен. Но..
        ☐ Спрайт под ретину. Если столкнешься с проблемами возможно это поможет https://toster.ru/q/261857. Под ретину должно быть 2 версии спрайта sprite.png sprite@2x.png.
          ☐ Естественно, иконки с расширением @2x идут только в sprite@2x.png
          ☐ Settings > Horizontal
          ☐ Style prefix: sprite-@1x, @2x, из-за ретинизации.
          ☐ Padding 5 px
          ☐ Download > Spritesheet + Stylesheet
          ☐ Не забывай чистить, между разными спрайтами
    Crop вернее Slice:
      ☐ Скорее всего можно обойтись без него. Но если дизайнер сильно запорол маски или smart object, тогда придется вырезать вручную. Главное отключить лишние слои.
    Base64:
      ☐ Насколько я понимаю, это для Font-Awesome и тому подобных изображений, которые на самом деле код. Еще пока не сталкивалась с этим.
    Save for Web:
      ☐ На всякий случай. Не забывай, что и так можно сохранять и нарезать графику: через дублирование слоев, открытие их в отдельном окне, слиянии данных слоев в крайнем случае использовании crop. В таких случаях лучше сохранять по старинке.
  Scss:
    vars.scss:
      Breakpoints:
        Если есть несколько версий макета:
          ☐ Измерить ширину версий макета (пока @не контента). Иногда breakpoints будут зависеть просто от этого.
            ☐ Например, в violet размер tablet версии всего 700. Делать переменную на 768 бессмысленно.
        Если макет один, ака десктопный:
          ☐ Пока оставь breakpoints без изменений
    Вносишь изменения в mixins.scss:
      Если есть несколько версий макета:
        ☐ Измерь ширину контента или предпоследних линий подсветки в PS (зависит от качества дизайна) и сравниваешь с шириной макета
        ☐ Проверь формулу для mixin container() mixin container-fluid() @change (Что? Я не совсем понимаю что это значит)
      Если у макета есть только десктопная версия:
        ☐ Пока оставь breakpoints без изменений
  NB!:
    ☐ @Памятка верстальщику - полезные советы в Evernote, а также небольшая часть продублирована в hotkeys.
      ☐ @Media__Queries - при верстке копируешь медиавыражения во внутрь селекторов, если они нужны. Дабы не нарушать общий принцип стилизации
      ☐ Пиши семантично и по БЭМ. Вдумчиво создавай семантику: h1, h2, h3, b , p, bq, cite, q
      ☐ Когда разметка блока готова - отправь html код в Sublime (eCSStractor) - с его помощью удобно разбивать свою верстку на файлы и нужные селекторы.
    ☐ Записываешь подробные шаги, которые нужно выполнить дальше. Все что слишком подробно или непрофессионально для коммита в Git в разделе Верстка.
      ☐ Пример: добавить пункт "повесить событие на кнопку открывающую больше новостей" дабы в коммите писать только инфу которая УЖЕ была выполнена.
    ☐ Не забывай коммитится после отдельных блоков. Если будут правки от заказчика создавай их в ветках.
    ☐ В самом простом виде workflow выглядит так:
      gulp:
        Блок - стадии работы: add (aka done), wip, issue, bug. (feature - new branch)
      git status:
        можно пропустить, если ты итак видешь по цвету папок (желтому - внесены изменения и зеленому - добавлены файлы), что есть изменения, которые нужно закоммитить.
      git add:
        git add . - в случае, если ты хочешь добавить все файлы одним махом.
        git add app/путь к файлу - удобно, если изменения не связаны друг с другом. Например, в scss файлах проводилась работа над одним блоком, а в js была исправлена ошибка или код не относящийся к блоку над, которым ты должна работать.
          git add app/scss - дальше закоммитить и запушить. И уже потом сделать отдельный коммит для js. Кстати, автокомплит работает так что я всего-лишь написала две буквы git add a(Tab) s(Tab)
      git commit -m 'Описание того, что было сделано':
      git push:
      git status:
        On branch master Your branch is up-to-date with 'origin/master'. nothing to commit, working tree clean
--- ✄ --------------------------------------
Продакшен:
  НЕ ЗАБЫТЬ! В index.html и прочих файлах HTML:
    ☐ 1. Условие - заменить инфой из ТЗ заказчика или оставить пустым
    ☐ 2. Условие - не трогать до стадии Deploy. Если ты не будушь переносить сайт на сервер - убери комментарий и удали саму строчку.
    ☐ 3. Условие - сделала здесь https://favicon.io/favicon-converter/ - из ретиновой версии лого. Не трогать до стадии Deploy.
    ☐ 4. Условие - брала из 3.Условие. Проверить подключилась ли вообще. Но после этого не трогать до стадии Deploy.
    ☐ У ссылок без адреса должны быть плейхолдеры "#" - в противном случае клик по ним приведет к обновлению страницы. Нет, это очень ненормально выглядит.
    ☐ title - проверь поменяла ли ты название на данное заказчиком?
--- ✄ --------------------------------------
На будущее:
  ☐ Перед сдачей проекта не забудь проверить пункт @Продакшен
  ☐ Моменты, которые нужно изменить в project.todo в бущудем помечать тегом @change
  ☐ Есть что-то в этом проекте, что натолкнуло тебя на мысли об обновлении шаблона?
  ☐ Есть файлы, код которых требует обновления перед тем как брать следующий проект?
  @Необходимо внести следующие правки:
    ☐ Блоки отредактированы, но требуется дальнейшее совершенствование.
    ☐ Инструкцию работы с OSPanel, WordPress.
    ☐ Проанализировать файлы проекта @Nikolsky. И понять какие изменения еще не были включены в project.todo
    ☐ Также не забывать, что данный файл является обновленным только для custom OSPanel. Следовательно нужна дополнительная обработка для других версий.
